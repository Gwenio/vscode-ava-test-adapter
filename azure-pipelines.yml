trigger:
- master
- next
- pipeline
- greenkeeper/*
- fix/*
- feat/*
- perf/*
- refactor/*

variables:
- group: vscode-ava-test-adapter
- name: PNPM_VERSION
  value: 3

jobs:
- job: coverage
  displayName: Test Coverage
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.10'
    displayName: 'Install Node.js'
  - script: |
      curl -L https://unpkg.com/@pnpm/self-installer | node
      pnpm install --prefer-frozen-lockfile --ignore-scripts
    displayName: PNPM Install
  - script: pnpx tsc --project src/tsconfig.json
    displayName: Compile Source
  - script: pnpx tsc --project test/tsconfig.json
    displayName: Compile Tests
  - script: pnpx rollup -c
    displayName: Rollup Bundles
  - script: pnpm install --prefer-frozen-lockfile --ignore-scripts
    displayName: Install Pack Deps
    workingDirectory: deps
  - script: pnpx gulp prepare
    displayName: Prepare Pack Deps
  - script: |
      pnpx nyc -r text ava --config ava.coverage.js
      pnpx nyc report -r json
      pnpx nyc report -r cobertura
    displayName: Generate Reports
  - task: PublishCodeCoverageResults@1
    displayName: Publish Azure Report
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/tmp/nyc/cobertura-coverage.xml'
  - script: |
      bash <(curl https://codecov.io/bash) -t $CODECOV_TOKEN -f ./tmp/nyc/coverage-final.json
    displayName: Publish Codecov Report
    env:
      CODECOV_TOKEN: $(CODECOV_TOKEN)
- job: test
  displayName: Test
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Node12_10:
        NODE_VERSION: '12.10'
      Node10:
        NODE_VERSION: '10.16'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(NODE_VERSION)
    displayName: 'Install Node.js'
  - script: |
      curl -L https://unpkg.com/@pnpm/self-installer | node
      pnpm install --prefer-frozen-lockfile --ignore-scripts
    displayName: PNPM Install
  - script: pnpx tsc --project src/tsconfig.json
    displayName: Compile Source
  - script: pnpx tsc --project test/tsconfig.json
    displayName: Compile Tests
  - script: pnpx rollup -c
    displayName: Rollup Bundles
  - script: pnpm install --prefer-frozen-lockfile --ignore-scripts
    displayName: Install Pack Deps
    workingDirectory: deps
  - script: pnpx gulp prepare
    displayName: Prepare Pack Deps
  - bash: |
      pnpm add --global tap-xunit@latest
      (pnpx ava --tap | pnpx tap-xunit) > tmp/results.xml
    displayName: Run Tests
  - task: PublishTestResults@2
    displayName: Publish Azure Results
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: tmp/results.xml
      testRunTitle: All Tests
      buildConfiguration: Node.js-$(NODE_VERSION)
      publishRunAttachments: true
  - script: pnpx ava
    condition: failed()
    displayName: AVA Native Results
