trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  group: vscode-ava-test-adapter-secrets

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.7'
  displayName: 'Install Node.js'
- task: YarnInstaller@3
  displayName: 'Install Yarn'
  inputs:
    versionSpec: 1.17.x
    checkLatest: true
    includePrerelease: false
- script:
- task: CacheBeta@0
  inputs:
    key: yarn | $(Agent.OS) | yarn.lock
    path: $(YARN_CACHE_FOLDER)
  displayName: Cache Yarn packages
- script: yarn install
  displayName: 'yarn install'
- script: tsc --project src/tsconfig.json
  displayName: Compile Source
- script: tsc --project test/tsconfig.json
  displayName: Compile Tests
- script: npx rollup -c
  displayName: Rollup Bundles
- script: |
    npx nyc -r text-summary ava --config ava.coverage.js
    npx nyc report -r lcovonly
    npx nyc report -r cobertura
  displayName: Test Coverage
- task: PublishCodeCoverageResults@1
  displayName: Publish Azure Test Results
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/tmp/nyc/cobertura-coverage.xml'
- script: |
    bash <(curl https://codecov.io/bash) -t $(CODECOV_TOKEN) -f ./tmp/nyc/lcov.info
  displayName: CodeCov.io

# TODO: make test report that can be sent to PublishTestResults@2 task.
