{
	"name": "vscode-ava-test-adapter",
	"displayName": "AVA Test Explorer",
	"description": "Run your AVA tests in the Sidebar of Visual Studio Code",
	"icon": "img/icon.png",
	"author": "James Adam Armstrong",
	"publisher": "gwenio",
	"version": "0.1.0",
	"license": "ISC",
	"homepage": "https://github.com/Gwenio/vscode-ava-test-adapter.git",
	"repository": {
		"type": "git",
		"url": "https://github.com/Gwenio/vscode-ava-test-adapter.git"
	},
	"bugs": {
		"url": "https://github.com/Gwenio/vscode-ava-test-adapter/issues"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"ava",
		"test",
		"testing"
	],
	"main": "dist/main.js",
	"scripts": {
		"clean": "rimraf tmp dist *.vsix",
		"compile": "tsc -p src/tsconfig.json",
		"rollup": "rollup -c",
		"build": "yarn run compile && yarn run rollup",
		"rebuild": "yarn run clean && yarn run build",
		"package": "vsce package",
		"publish": "vsce publish"
	},
	"dependencies": {
		"arrify": "^2.0.1",
		"ava": "^2.2.0",
		"common-path-prefix": "^1.0.0",
		"tslib": "^1.9.3",
		"vscode-test-adapter-api": "^1.7.0",
		"vscode-test-adapter-util": "^0.7.0"
	},
	"devDependencies": {
		"@babel/core": "^7.5.5",
		"@types/hash-sum": "^1.0.0",
		"@types/micromatch": "^3.1.0",
		"@types/node": "^12.6.8",
		"@types/random": "^2.1.0",
		"@types/seedrandom": "^2.4.28",
		"@types/vscode": "~1.23.0",
		"@typescript-eslint/eslint-plugin": "^1.13.0",
		"@typescript-eslint/parser": "^1.13.0",
		"babel-plugin-minify-constant-folding": "^0.5.0",
		"babel-plugin-minify-dead-code-elimination": "^0.5.0",
		"babel-plugin-minify-guarded-expressions": "^0.4.3",
		"babel-plugin-minify-mangle-names": "^0.5.0",
		"babel-plugin-transform-inline-consecutive-adds": "^0.4.3",
		"babel-plugin-transform-inline-environment-variables": "^0.4.3",
		"babel-plugin-transform-member-expression-literals": "^6.9.4",
		"babel-plugin-transform-property-literals": "^6.9.4",
		"babel-plugin-transform-regexp-constructors": "^0.4.3",
		"babel-plugin-transform-remove-debugger": "^6.9.4",
		"babel-plugin-transform-remove-undefined": "^0.5.0",
		"builtin-modules": "^3.1.0",
		"eslint": "5.16.0",
		"eslint-plugin-node": "^9.1.0",
		"eslint-plugin-promise": "^4.2.1",
		"eslint-plugin-unicorn": "^9.1.1",
		"globby": "^10.0.1",
		"hash-sum": "^2.0.0",
		"micromatch": "^4.0.2",
		"random": "^2.1.1",
		"rimraf": "^2.6.3",
		"rollup": "^1.17.0",
		"rollup-plugin-babel": "^4.3.3",
		"rollup-plugin-commonjs": "^10.0.1",
		"rollup-plugin-json": "^4.0.0",
		"rollup-plugin-node-resolve": "^5.2.0",
		"rollup-plugin-sourcemaps": "^0.4.2",
		"rollup-plugin-terser": "^5.1.1",
		"seedrandom": "^3.0.1",
		"typescript": "^3.5.3",
		"vsce": "^1.65.0"
	},
	"engines": {
		"vscode": "^1.23.0",
		"node": ">=11.14.0"
	},
	"extensionDependencies": [
		"hbenl.vscode-test-explorer"
	],
	"activationEvents": [
		"*"
	],
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "AVA Test Explorer",
			"properties": {
				"avaExplorer.cwd": {
					"description": "The working directory where AVA is run (relative to the workspace folder)",
					"type": "string",
					"scope": "resource"
				},
				"avaExplorer.configs": {
					"description": "The location of the AVA config file (relative to the working directory)",
					"type": "array",
					"default": [
						{
							"file": null,
							"env": {},
							"serial": false,
							"debuggerSkipFiles": []
						}
					],
					"items": {
						"description": "An AVA configuration.",
						"properties": {
							"file": {
								"description": "The configuration file relative to 'avaExplorer.cwd'.",
								"type": [
									"string",
									"null"
								],
								"default": null
							},
							"env": {
								"description": "Environment variables to be set when running the tests.",
								"type": "object",
								"additionalProperties": {
									"type": "string"
								},
								"default": {}
							},
							"serial": {
								"description": "If true then test will be run serially.",
								"type": "boolean",
								"default": false
							},
							"debuggerSkipFiles": {
								"description": "An array of glob patterns for files to skip when debugging",
								"type": "array",
								"items": {
									"type": "string"
								},
								"default": []
							}
						}
					},
					"maxItems": 1,
					"minItems": 1,
					"scope": "resource"
				},
				"avaExplorer.env": {
					"description": "Environment variables to be set when running the tests.",
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"default": {},
					"scope": "resource"
				},
				"avaExplorer.debuggerPort": {
					"description": "The preferred port to use for debugging sessions",
					"type": "number",
					"default": 9229,
					"scope": "resource"
				},
				"avaExplorer.nodePath": {
					"description": "The path to the node executable to use. By default it will attempt to find it on your PATH, if it can't find it or if this option is set to `null`, it will use the one shipped with VS Code",
					"type": [
						"string",
						"null"
					],
					"default": "default",
					"scope": "resource"
				},
				"avaExplorer.nodeArgv": {
					"description": "The arguments to the node executable to use. To enable typescript support, install the ts-node npm package and set this property to [\"-r\", \"ts-node/register\"]",
					"type": "array",
					"items": {
						"type": "string"
					},
					"scope": "resource"
				},
				"avaExplorer.breakOnFirstLine": {
					"description": "when debugging, inject a breakpoint at the 1st line of the 1st run test",
					"type": "boolean",
					"default": false,
					"scope": "resource"
				},
				"avaExplorer.debuggerSkipFiles": {
					"description": "An array of glob patterns for files to skip when debugging",
					"type": "array",
					"items": {
						"type": "string"
					},
					"scope": "resource"
				},
				"avaExplorer.logpanel": {
					"description": "write diagnostic logs to an output panel",
					"type": "boolean",
					"scope": "resource"
				},
				"avaExplorer.logfile": {
					"description": "write diagnostic logs to the given file",
					"type": "string",
					"scope": "resource"
				}
			}
		}
	}
}
